// pipeline {
//     agent any

//     environment
//     {
//         NETLIFY_SITE_ID='dd4e9d15-e74e-4c5e-a45a-da5f9a024f29'
//         NETLIFY_AUTH_TOKEN=credentials('netlify-token')
//     }
//     stages {
//         // stage('Hello') {
//         //     steps {
//         //         echo 'Hello World'
//         //     }
//         // }


//         //this is a comment

//         /*
//         line1
//         line2
//         */

//         stage('Build')
//         {
//             agent{
//                 docker
//                 {
//                     image 'node:18-alpine'
//                     reuseNode true
//                 }
//             }
//             steps{
//                 sh '''
//                     ls -la
//                     node --version
//                     npm --version
//                     npm ci
//                     npm run build
//                     ls -la
//                 '''
//             }
//         }
        

//         // stage('Test')
//         // {
//         //     agent{
//         //         docker 
//         //         {
//         //             image 'node:18-alpine'
//         //             reuseNode true
//         //         }
//         //     }
//         //     steps{
//         //         sh '''
//         //             test stage
//         //             #test -f build/index.html
//         //             npm test
//         //             '''
//         //     }
//         // }

//         stage('E2E')
//         {
//             agent{
//                 docker 
//                 {
//                     image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
//                     reuseNode true
//                 }
//             }
//             steps{
//                 sh '''
//                    npm install serve
//                    node_modules/.bin/serve -s build &
//                    sleep 10
//                    npx playwright test --reporter=html
//                    '''
//             }

//              post
//             {
//                 always
//                 {
//                     // junit 'jest-results/junit.xml'
//                     publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PlayWright Local', reportTitles: '', useWrapperFileDirectly: true])
//                 }
//             }
//         }

//         stage("Tests"){
//             parallel {
//                 stage('Unit Test')
//                 {
//                     agent{
//                         docker 
//                         {
//                             image 'node:18-alpine'
//                             reuseNode true
//                         }
//                     }
//                     steps{
//                         sh '''
//                             test stage
//                             #test -f build/index.html
//                             npm test
//                             '''
//                     }
//                     post{
//                         always
//                         {
//                             junit 'jest-results/junit.xml'
//                         }
//                         }
//                 }

//                 stage('E2E')
//                 {
//                     agent{
//                         docker 
//                         {
//                             image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
//                             reuseNode true
//                         }
//                     }
//                     steps{
//                         sh '''
//                         npm install serve
//                         node_modules/.bin/serve -s build &
//                         sleep 10
//                         npx playwright test --reporter=html
//                         '''
//                     }
//                     post{
//                         always
//                         {
//                             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PlayWright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
//                         }
//                         }
//                 }
//             }
//         }

//         stage('Deploys')
//         {
//             agent{
//                 docker 
//                 {
//                     image 'node:18-alpine'
//                     reuseNode true
//                 }
//             }
//             steps{
//                 sh '''
//                     echo "deploy stage"
//                     #npm install netlify-cli
//                     npm install netlify-cli@20.1.1
//                     node_modules/.bin/netlify --version
//                     echo "Deploying to site id: $NETLIFY_SITE_ID"
//                     node_modules/.bin/netlify status
//                     node_modules/.bin/netlify deploy --dir=build --prod
//                     echo "done!..."
//                     '''
//             }
//         }

//         stage(' Prod E2E')
//         {
//             agent{
//                 docker 
//                 {
//                     image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
//                     reuseNode true
//                 }
//             }

//             environment
//                 {
//                    CI_ENVIRONMENT_URL = 'https://fanciful-empanada-c7edc2.netlify.app'
//                 }

//             steps{
//                 sh '''
//                    npx playwright test --reporter=html
//                    '''
//             }

//             post
//             {
//                 always
//                 {
//                     // junit 'jest-results/junit.xml'
//                     publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PlayWright E2E', reportTitles: '', useWrapperFileDirectly: true])
//                 }
//             }
//         }
//     }
// }

// //     post
// //     {
// //         always
// //         {
// //             junit 'jest-results/junit.xml'
// //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'PlayWright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
// //         }
// //     }
// // }

pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = 'dd4e9d15-e74e-4c5e-a45a-da5f9a024f29'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {

        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit tests') {
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            #test -f build/index.html
                            npm test
                        '''
                    }
                    post {
                        always {
                            junit 'jest-results/junit.xml'
                        }
                    }
                }

                stage('E2E') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            npm install serve
                            node_modules/.bin/serve -s build &
                            sleep 10
                            #npx playwright test  --reporter=html
                            npx playwright test --reporter=html
                            mv playwright-report $WORKSPACE/playwright-report
                            ls -la $WORKSPACE/playwright-report
                        '''
                    }

                    post {
                        always {
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright Local', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm install netlify-cli@20.1.1
                    node_modules/.bin/netlify --version
                    echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        }

        stage('Prod E2E') {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }
            }

            environment {
                CI_ENVIRONMENT_URL = 'https://fanciful-empanada-c7edc2.netlify.app'
            }

            steps {
                sh '''
                    #npx playwright test  --reporter=html
                    npx playwright test --reporter=html
                    mv playwright-report $WORKSPACE/playwright-report
                    ls -la $WORKSPACE/playwright-report
                '''
            }

            post {
                always {
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright E2E', reportTitles: '', useWrapperFileDirectly: true])
                }
            }
        }
    }
}

